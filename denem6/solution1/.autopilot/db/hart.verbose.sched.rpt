

================================================================
== Vitis HLS Report for 'hart'
================================================================
* Date:           Wed Feb 28 07:18:01 2024

* Version:        2023.2.2 (Build 4101106 on Feb  9 2024)
* Project:        denem6
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.061 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        2|  10.000 ns|  20.000 ns|    2|    3|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 3 4 
2 --> 3 
3 --> 
4 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.70>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%spectopmodule_ln7 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [hart.cpp:7]   --->   Operation 6 'spectopmodule' 'spectopmodule_ln7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %inst"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %inst, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %pc"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %pc, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%pc_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %pc" [hart.cpp:7]   --->   Operation 11 'read' 'pc_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%inst_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %inst" [hart.cpp:7]   --->   Operation 12 'read' 'inst_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.61ns)   --->   "%store_ln24 = store i31 0, i31 0" [hart.cpp:24]   --->   Operation 13 'store' 'store_ln24' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 31> <Depth = 32> <RAM>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%opcode = trunc i32 %inst_read" [hart.cpp:25]   --->   Operation 14 'trunc' 'opcode' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%rd = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %inst_read, i32 7, i32 11" [hart.cpp:26]   --->   Operation 15 'partselect' 'rd' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%rs1 = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %inst_read, i32 15, i32 19" [hart.cpp:27]   --->   Operation 16 'partselect' 'rs1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%rs2 = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %inst_read, i32 20, i32 24" [hart.cpp:28]   --->   Operation 17 'partselect' 'rs2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp4 = partselect i3 @_ssdm_op_PartSelect.i3.i32.i32.i32, i32 %inst_read, i32 12, i32 14" [hart.cpp:29]   --->   Operation 18 'partselect' 'tmp4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_s = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %inst_read, i32 25, i32 31" [hart.cpp:30]   --->   Operation 19 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%imm_11_0 = partselect i12 @_ssdm_op_PartSelect.i12.i32.i32.i32, i32 %inst_read, i32 20, i32 31" [hart.cpp:31]   --->   Operation 20 'partselect' 'imm_11_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%sext_ln16 = sext i12 %imm_11_0" [hart.cpp:16]   --->   Operation 21 'sext' 'sext_ln16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.70ns)   --->   "%switch_ln46 = switch i7 %opcode, void %cond.true, i7 51, void %sw.bb, i7 19, void %sw.bb54" [hart.cpp:46]   --->   Operation 22 'switch' 'switch_ln46' <Predicate = true> <Delay = 0.70>

State 2 <SV = 1> <Delay = 0.61>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i5 %rs1" [hart.cpp:53]   --->   Operation 23 'zext' 'zext_ln53' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%rf_addr_2 = getelementptr i31 %rf, i64 0, i64 %zext_ln53" [hart.cpp:53]   --->   Operation 24 'getelementptr' 'rf_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [2/2] (0.61ns)   --->   "%rf_load_2 = load i5 %rf_addr_2" [hart.cpp:53]   --->   Operation 25 'load' 'rf_load_2' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 31> <Depth = 32> <RAM>

State 3 <SV = 2> <Delay = 4.06>
ST_3 : Operation 26 [1/2] (0.61ns)   --->   "%rf_load_2 = load i5 %rf_addr_2" [hart.cpp:53]   --->   Operation 26 'load' 'rf_load_2' <Predicate = (opcode == 19)> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 31> <Depth = 32> <RAM>
ST_3 : Operation 27 [1/1] (2.83ns)   --->   "%return_val_1 = call i32 @OP_AL_32I, i6 19, i7 %tmp_s, i3 %tmp4, i31 %rf_load_2, i31 %sext_ln16" [hart.cpp:53]   --->   Operation 27 'call' 'return_val_1' <Predicate = (opcode == 19)> <Delay = 2.83> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln38_1 = trunc i32 %return_val_1" [hart.cpp:38]   --->   Operation 28 'trunc' 'trunc_ln38_1' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.71ns)   --->   "%icmp_ln54 = icmp_eq  i5 %rd, i5 0" [hart.cpp:54]   --->   Operation 29 'icmp' 'icmp_ln54' <Predicate = (opcode == 19)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %icmp_ln54, void %if.then64, void %if.end69" [hart.cpp:54]   --->   Operation 30 'br' 'br_ln54' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %return_val_1, i32 1, i32 31" [hart.cpp:54]   --->   Operation 31 'partselect' 'trunc_ln2' <Predicate = (opcode == 19 & !icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i5 %rd" [hart.cpp:54]   --->   Operation 32 'zext' 'zext_ln54' <Predicate = (opcode == 19 & !icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%rf_addr_4 = getelementptr i31 %rf, i64 0, i64 %zext_ln54" [hart.cpp:54]   --->   Operation 33 'getelementptr' 'rf_addr_4' <Predicate = (opcode == 19 & !icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.61ns)   --->   "%store_ln54 = store i31 %trunc_ln2, i5 %rf_addr_4" [hart.cpp:54]   --->   Operation 34 'store' 'store_ln54' <Predicate = (opcode == 19 & !icmp_ln54)> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 31> <Depth = 32> <RAM>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln54 = br void %if.end69" [hart.cpp:54]   --->   Operation 35 'br' 'br_ln54' <Predicate = (opcode == 19 & !icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln114 = br i1 %trunc_ln38_1, void %cond.false, void %cond.true" [hart.cpp:114]   --->   Operation 36 'br' 'br_ln114' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_3 : Operation 37 [1/2] (0.61ns)   --->   "%rf_load = load i5 %rf_addr" [hart.cpp:48]   --->   Operation 37 'load' 'rf_load' <Predicate = (opcode == 51)> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 31> <Depth = 32> <RAM>
ST_3 : Operation 38 [1/2] (0.61ns)   --->   "%rf_load_1 = load i5 %rf_addr_1" [hart.cpp:48]   --->   Operation 38 'load' 'rf_load_1' <Predicate = (opcode == 51)> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 31> <Depth = 32> <RAM>
ST_3 : Operation 39 [1/1] (2.83ns)   --->   "%return_val = call i32 @OP_AL_32I, i6 51, i7 %tmp_s, i3 %tmp4, i31 %rf_load, i31 %rf_load_1" [hart.cpp:48]   --->   Operation 39 'call' 'return_val' <Predicate = (opcode == 51)> <Delay = 2.83> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln38 = trunc i32 %return_val" [hart.cpp:38]   --->   Operation 40 'trunc' 'trunc_ln38' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.71ns)   --->   "%icmp_ln49 = icmp_eq  i5 %rd, i5 0" [hart.cpp:49]   --->   Operation 41 'icmp' 'icmp_ln49' <Predicate = (opcode == 51)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln49 = br i1 %icmp_ln49, void %if.then46, void %sw.epilog" [hart.cpp:49]   --->   Operation 42 'br' 'br_ln49' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %return_val, i32 1, i32 31" [hart.cpp:49]   --->   Operation 43 'partselect' 'trunc_ln1' <Predicate = (opcode == 51 & !icmp_ln49)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i5 %rd" [hart.cpp:49]   --->   Operation 44 'zext' 'zext_ln49' <Predicate = (opcode == 51 & !icmp_ln49)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%rf_addr_3 = getelementptr i31 %rf, i64 0, i64 %zext_ln49" [hart.cpp:49]   --->   Operation 45 'getelementptr' 'rf_addr_3' <Predicate = (opcode == 51 & !icmp_ln49)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.61ns)   --->   "%store_ln49 = store i31 %trunc_ln1, i5 %rf_addr_3" [hart.cpp:49]   --->   Operation 46 'store' 'store_ln49' <Predicate = (opcode == 51 & !icmp_ln49)> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 31> <Depth = 32> <RAM>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln49 = br void %sw.epilog" [hart.cpp:49]   --->   Operation 47 'br' 'br_ln49' <Predicate = (opcode == 51 & !icmp_ln49)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln114 = br i1 %trunc_ln38, void %cond.false, void %cond.true" [hart.cpp:114]   --->   Operation 48 'br' 'br_ln114' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.95ns)   --->   "%add_ln114 = add i32 %pc_read, i32 4" [hart.cpp:114]   --->   Operation 49 'add' 'add_ln114' <Predicate = (opcode == 19 & !trunc_ln38_1) | (opcode == 51 & !trunc_ln38)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.40ns)   --->   "%br_ln114 = br void %cond.end" [hart.cpp:114]   --->   Operation 50 'br' 'br_ln114' <Predicate = (opcode == 19 & !trunc_ln38_1) | (opcode == 51 & !trunc_ln38)> <Delay = 0.40>
ST_3 : Operation 51 [1/1] (0.95ns)   --->   "%add_ln114_1 = add i32 %pc_read, i32 5" [hart.cpp:114]   --->   Operation 51 'add' 'add_ln114_1' <Predicate = (opcode != 51 & trunc_ln38_1) | (opcode != 51 & opcode != 19) | (opcode == 51 & trunc_ln38)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.40ns)   --->   "%br_ln114 = br void %cond.end" [hart.cpp:114]   --->   Operation 52 'br' 'br_ln114' <Predicate = (opcode != 51 & trunc_ln38_1) | (opcode != 51 & opcode != 19) | (opcode == 51 & trunc_ln38)> <Delay = 0.40>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%next_pc = phi i32 %add_ln114_1, void %cond.true, i32 %add_ln114, void %cond.false" [hart.cpp:114]   --->   Operation 53 'phi' 'next_pc' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln117 = ret i32 %next_pc" [hart.cpp:117]   --->   Operation 54 'ret' 'ret_ln117' <Predicate = true> <Delay = 0.00>

State 4 <SV = 1> <Delay = 0.61>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i5 %rs1" [hart.cpp:48]   --->   Operation 55 'zext' 'zext_ln48' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%rf_addr = getelementptr i31 %rf, i64 0, i64 %zext_ln48" [hart.cpp:48]   --->   Operation 56 'getelementptr' 'rf_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [2/2] (0.61ns)   --->   "%rf_load = load i5 %rf_addr" [hart.cpp:48]   --->   Operation 57 'load' 'rf_load' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 31> <Depth = 32> <RAM>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln48_1 = zext i5 %rs2" [hart.cpp:48]   --->   Operation 58 'zext' 'zext_ln48_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%rf_addr_1 = getelementptr i31 %rf, i64 0, i64 %zext_ln48_1" [hart.cpp:48]   --->   Operation 59 'getelementptr' 'rf_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [2/2] (0.61ns)   --->   "%rf_load_1 = load i5 %rf_addr_1" [hart.cpp:48]   --->   Operation 60 'load' 'rf_load_1' <Predicate = true> <Delay = 0.61> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 31> <Depth = 32> <RAM>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.704ns
The critical path consists of the following:
	wire read operation ('inst_read', hart.cpp:7) on port 'inst' (hart.cpp:7) [11]  (0.000 ns)
	blocking operation 0.703937 ns on control path)

 <State 2>: 0.614ns
The critical path consists of the following:
	'getelementptr' operation 5 bit ('rf_addr_2', hart.cpp:53) [24]  (0.000 ns)
	'load' operation 31 bit ('rf_load_2', hart.cpp:53) on array 'rf' [25]  (0.614 ns)

 <State 3>: 4.061ns
The critical path consists of the following:
	'load' operation 31 bit ('rf_load', hart.cpp:48) on array 'rf' [41]  (0.614 ns)
	'call' operation 32 bit ('return_val', hart.cpp:48) to 'OP_AL_32I' [45]  (2.833 ns)
	'store' operation 0 bit ('store_ln49', hart.cpp:49) of variable 'trunc_ln1', hart.cpp:49 on array 'rf' [53]  (0.614 ns)

 <State 4>: 0.614ns
The critical path consists of the following:
	'getelementptr' operation 5 bit ('rf_addr', hart.cpp:48) [40]  (0.000 ns)
	'load' operation 31 bit ('rf_load', hart.cpp:48) on array 'rf' [41]  (0.614 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
